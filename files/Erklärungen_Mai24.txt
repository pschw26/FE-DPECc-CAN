Aenderungen im file 'main_window_ui.py':
- 'label_39' zu 'label_s' umbennant (4 mal)
- Fontgrösse für 'terminal' auf 10 verändert -> 4 Zeilen sichtbar
- dspinB_fine.setDecimals(3) auf 3 Dezimalstellen erweitert
Diese Aenderungen könntest du im Qt-designer fürs file 'main_window.ui' übernehmen.

Im Programm 'gui_connections.py' habe ich alle file-Dinge (pandas, pd) auskommentiert.


Konfigurations-File fedpecc.config:

- Die Einheiten für Geschwindigkeiten und Beschleunigungen sind Umdrehungen pro Sekunden (RPS).
  Das sind die natürlichen pysikalischen Einheiten für Motoren.
  Im Program angezeigt sind hingegen die physikalischen Einheiten in mm resp. deg umgerechnet
  (RPS * pitch).

GLOBAL Parameter:
- Anzahl Motoren, Motoren für die Tischbeine
- Default-Werte für die Schrittweite in Fraktionen einer Umdrehung
- Minimale und maximale Drehgeschwindigkeiten

SDO: Diese Parameter werden für die einzelnen Motoren gesetzt.
- Geschwindigkeitsprofil ist trapezoidal (= konstante Beschleunigung).
  Kann in einer späteren Version relativ einfach auf 6-Punkt Rampe erweitert werden.

MOTOR_n:
Ihr solltet foldende Parameter anpassen:
- pitch
- default_velocity und default_acceleration (wenn nötig)
- Limiten der absoluten Positionierung: minimal, maximal, default und Schrittweite
- Evt. max current und standby current anpassen: Sollten die Motoren nicht stark genug sein
  oder nicht halten.
- Node-Nummern überprüfen: müssen für jeden Knoten (Motor) eindeutig sein.
- Sobald ihr die Limit-Schalter für Notabschaltung verwendet, müssen die switch-Paramter 
  auf 0 gesetzt werden (Switches aktiv). Ohne Limit-switches müssen sie 3 sein.
ACHTUNG: Alle Tischbein-Motoren (0 bis 3) müssen gleich parametrisiert werden! Ausnahme (Knoten-Nummern)


Zum Programm: Ich habe alle Funktionen durchgetestet.

Neuerungen: 
- Die Labels der gewählten Motoren ode Motorgruppen erscheinen gelb. Beim Fahren sind sie rot.
- Die store und goto-Funktionen sind implementiert. (Ich weiss allerdings nicht wie die
  Positionen 4, 5, 6 der Motoren PR, CR, S gespeichert werden und verwendet werden).
- Tischbein-Motoren können individuell nur mit den Keyboard-Funktionen (Steps) gefahren werden.
- Für die absoluten Fahr-Funktionen aller Tischbeine müssen die Positionen aller Motoren genau 
  übereinstimmen: Kann nach dem Horizontieren des Tisches mit Set Zero bewerkstelligt werden.
- Es müssen alle Tischbein-Motoren gewählt sein für die Funktionen:
  Set Zero, Absolute Position anfahren, Store, Goto (auch Goto 0)
- Bei HALT werden die Tischbein-Motoren auf gleiche Position gesetzt (auch wenn die effektiven
  Positionen leicht unterschiedlich sind. Es geht um ein paar Dutzend Mikroschritte).


To do:
- Alles was mit Abspeichern und Einlesen von Files zusammenhängt. 
- Ich habe eine Matrix-Variable lcd_val eingeführt, die die Positionen der angezeigten Matrix
  enthält. Diese Variable wird zur Anzeige auf die lcd_matrix kopiert.
  lcd_val enthält immer die aktuellen Positionswerte.


Seltenweise hatte ich nach dem Starten des Programms, beim ersten Fahren, Probleme mit der Anzeige
(Thread nicht gestartet). Ich habe keinen Fehler gefunden. Das Problem ist nicht reproduzierbar.
Es ist auch in der letzten paar Tagen nicht mehr aufgetaucht.


27. Mai 2024, Eric Reusser


